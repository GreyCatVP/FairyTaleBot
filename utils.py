import httpx
import os
from dotenv import load_dotenv

load_dotenv()

OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

SYSTEM_PROMPT = "–¢—ã ‚Äî –¥–æ–±—Ä—ã–π —Å–∫–∞–∑–æ—á–Ω–∏–∫. –ü–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–µ (3000‚Äì5000 —Å–∏–º–≤–æ–ª–æ–≤), —Å–≤–µ—Ç–ª—ã–µ –∏ –≤–æ–ª—à–µ–±–Ω—ã–µ —Å–∫–∞–∑–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π. –ü—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, —Å –ª—ë–≥–∫–∏–º —é–º–æ—Ä–æ–º –∏ –º–æ—Ä–∞–ª—å—é."

HEADERS = {
    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
    "HTTP-Referer": "https://github.com/GreyCatVP/FairyTaleBot",  # –≤–∞–∂–Ω–æ –¥–ª—è OpenRouter
    "Content-Type": "application/json"
}


async def generate_fairytale():
    payload = {
        "model": "deepseek/deepseek-r1-0528:free",  # üëâ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å
        "messages": [
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": "–ü—Ä–∏–¥—É–º–∞–π –Ω–æ–≤—É—é —Å–∫–∞–∑–∫—É."}
        ],
        "temperature": 1.0
    }

    try:
        async with httpx.AsyncClient(timeout=60.0) as client:
            response = await client.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers=HEADERS,
                json=payload
            )
            response.raise_for_status()
            return response.json()['choices'][0]['message']['content']
    except Exception as e:
        print(f"[OpenRouter ERROR] {e}")
        return "–û–π... —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –¢–∏–º–æ—à–∞ –ø–æ—Ç–µ—Ä—è–ª —Å–∫–∞–∑–∫—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ."
